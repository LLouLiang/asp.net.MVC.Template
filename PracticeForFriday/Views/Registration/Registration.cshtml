@model PracticeForFriday.Models.ViewModel
<!DOCTYPE html>
<link href="~/Content/angular-material.css" rel="stylesheet" />
<script src="~/Scripts/angular.min.js"></script>
<script src="https://www.gstatic.com/firebasejs/4.1.3/firebase.js"></script>
<script src="https://cdn.firebase.com/libs/angularfire/2.0.1/angularfire.min.js"></script>
<script src="~/Scripts/angular-animate.min.js"></script>
<script src="~/Scripts/angular-aria.min.js"></script>
<script src="~/Scripts/angular-material.min.js"></script>
<script>
	var config = {
		apiKey: "AIzaSyDc5jSrwwhyIV1EWuMICuSvx-NDyDdT5RI",
		authDomain: "practicefriday.firebaseapp.com",
		databaseURL: "https://practicefriday.firebaseio.com",
		projectId: "practicefriday",
		storageBucket: "",
		messagingSenderId: "764592457322" 
	};
	firebase.initializeApp(config);
	var thisapp = angular.module('myapp', ['ngMaterial','firebase']);
	thisapp.controller("DemoCtrl", function ($scope, $log, $firebaseObject) {
		// firebase database root name setting 
		const rootRef = firebase.database().ref().child('angular');
		// firebase database child node setting 
		const ref = rootRef.child('object');
		// setting the attribute val
		$scope.displaydata = $firebaseObject(ref);

		$scope.displaydata.$ref().once('value', function (snapshot) {
			$scope.fbval = snapshot.val();
			$log.info($scope.fbval);
		});
		

		$scope.submitbtn = false;
		$scope.showProgress = false;
		$scope.RptloginPwd = "";
		$scope.firstname = "";
		$scope.lastname = "";
		$scope.loginID = "";
		$scope.loginPwd ="";
		$scope.email = "";
		$scope.phone = "";
		$scope.address = "";
		$scope.description = "Password needs match each other";
		$scope.pwdCheck_1 = function () {
			if (($scope.RptloginPwd == $scope.loginPwd) && ($scope.loginPwd != "")) {
				$scope.submitbtn = false;
			} else {
				$scope.submitbtn = true;
			}
			$log.info($scope.RptloginPwd + "and" + $scope.loginPwd);
			$log.info("this is employee" + $scope.loginPwd);
		}
		$scope.pwdCheck_2 = function () {
			if (($scope.RptloginPwd == $scope.loginPwd) && ($scope.RptloginPwd != "")) {
				$scope.submitbtn = false;
			} else {
				$scope.submitbtn = true;
			}
			$log.info($scope.RptloginPwd + "and" + $scope.loginPwd);
			$log.info("this is employee"+$scope.loginPwd);
		}
		$scope.fileselected = function () {
			$log.info($scope.fileSelect);
			//// get file
			//var file = $scope.fileSelect;
			//$log.info(file);
			//// create file storage path
			//// e.g. firebase.storage().ref("foldername/file_name.whatever");
			//var fbstorage = firebase.storage().ref('user_upload/' + $scope.fileSelect.name);
			////upload file
			//var task = storageRef.put(file);
			////ascy progress circle
			//task.on("state_changed",
			//	function Progress(snapshot) {
			//		var isLoading = snapshot.bytesTransferred / snapshot.totalBytes;
			//		$log.info(isLoading);
			//		if (isLoading != 1) {
			//			$scope.showProgress = true;
			//		} eles{
			//			$scope.showProgress = false;
			//		}

			//	},
			//	function Error() {

			//	},
			//	function Complete() {
			//		$scope.showProgress = false;
			//	}
			//);
		}
	});
	thisapp.config(function ($mdThemingProvider) {

			// Configure a dark theme with primary foreground yellow
			$mdThemingProvider.theme('docs-dark', 'default')
				.primaryPalette('yellow')
				.dark();

		});
</script>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Registration</title>
</head>
<body>
	@using (Html.BeginForm("Registration", "Registration", FormMethod.Post))
	{
		@Html.ValidationSummary(true, "ValidationSummary")
		@Html.AntiForgeryToken()
		<div ng-app="myapp" ng-controller="DemoCtrl" layout="column" ng-cloak class="md-inline-form">
			<md-content md-theme="docs-dark" layout-gt-sm="row" layout-padding>
				<div>
					<md-input-container>
						<label>Login ID</label>
						@Html.TextBoxFor(Model =>Model.Employee.loginID, new { name="loginid",ng_model ="loginID", required="required"})
						<div ng-messages="form.loginid.$error">
							<div ng-message="required">This is required.</div>
						</div>
						@Html.ValidationMessageFor(Model => Model.Employee.loginID, "", new { @style = "color:#cc0000;" })
					</md-input-container>
				
						
					<md-input-container>
						<label>Login Password:</label>
						@Html.PasswordFor(Model => Model.Employee.loginPassword, new {name= "loginPassword_1", ng_model = "loginPwd", ng_change = "pwdCheck_1()", required="required" })
						@Html.ValidationMessageFor(Model => Model.Employee.loginPassword, "", new { @style = "color:#cc0000;"})
						<div ng-messages="form.loginPassword_1.$error">
							<div ng-message="required">Password is required.</div>
						</div>
					</md-input-container>
					<md-input-container>
						<label>Repeat Password</label>
						<input ng-model="RptloginPwd" type="password" ng-change="pwdCheck_1()" name= "loginPassword_2" required>
						<div ng-messages="form.loginPassword_2.$error">
							<div ng-message="required">Repeat password is required.</div>
						</div>
					</md-input-container>
					
					</div>
				<div>
					<md-input-container>
						@Html.ActionLink("Already have an account", "Login", "SignIn")
					</md-input-container>
				</div>
			</md-content>

			<md-content layout-padding>
				<div>
					<div layout-gt-xs="row">
						<md-input-container class="md-block" flex-gt-xs>
							<label>Phone Contact Number</label>
							@Html.TextBoxFor(Model => Model.Employee.Phone, new { ng_model="phone" })
							@Html.ValidationMessageFor(Model => Model.Employee.Phone, "", new { @style = "color:#cc0000;" })
						</md-input-container>
						<md-input-container class="md-block" flex-gt-xs>
							<label>Email Address</label>
							@Html.TextBoxFor(Model => Model.Employee.Email_Address, new {ng_model="email", name="emailaddress", required="required"})
							@Html.ValidationMessageFor(Model => Model.Employee.Email_Address, "", new { @style = "color:#cc0000;" })
							<div ng-messages="form.emailaddress.$error">
								<div ng-message="required">Valid Email address is required.</div>
							</div>
						</md-input-container>

					</div>

					<div layout-gt-sm="row">
						<md-input-container class="md-block" flex-gt-sm>
							<label>First name</label>
							@Html.TextBoxFor(Model => Model.Employee.first_name, new {ng_model = "firstname" })
						</md-input-container>

						<md-input-container class="md-block" flex-gt-sm>
							<label>Last name</label>
							@Html.TextBoxFor(Model => Model.Employee.last_name, new {ng_model = "lastname" })
						</md-input-container>
					</div>

					<md-input-container class="md-block">
						<label>Address 1</label>
						@Html.TextBoxFor(Model => Model.Employee.Home_Address, new {ng_model = "address" })
					</md-input-container>
				</div>
				<div>
					<input type="submit" value="Sign Up" class="btn-group btn" ng-disabled="submitbtn"/>
						<label ng-model="description" ng-show="submitbtn">
							{{description}}
						</label>
				</div>
			</md-content>
		</div>
	}
</body>
</html>
